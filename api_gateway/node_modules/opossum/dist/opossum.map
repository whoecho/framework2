{"version":3,"file":"opossum.js","mappings":"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,GAAGvD,IAAI,CAACwD,IAAI,CAAClB,UAAU,GAAGgB,GAAG,CAACxC,MAAM,CAAC;EAC9C,OAAOwC,GAAG,CAACC,GAAG,GAAG,CAAC,CAAC,IAAI,CAAC;AAC1B;AAEA3L,MAAM,CAACC,OAAO,GAAGA,OAAO,GAAGG,MAAM;;;;;;;;;;AC1MjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB;;AAEnB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,sBAAsB;AACxC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe;AACf;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA,oBAAoB,SAAS;AAC7B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;;AAEA,kCAAkC,QAAQ;AAC1C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAoB,iBAAiB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,QAAQ;AACR;AACA,uCAAuC,QAAQ;AAC/C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,OAAO;AACzB;AACA;AACA;;AAEA;AACA,SAAS,yBAAyB;AAClC;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,8DAA8D,YAAY;AAC1E;AACA,8DAA8D,YAAY;AAC1E;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,qCAAqC,YAAY;AACjD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI;AACJ;AACA;AACA;;;;;;;UChfA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;UEtBA;UACA;UACA;UACA","sources":["webpack://circuitBreaker/webpack/universalModuleDefinition","webpack://circuitBreaker/./index.js","webpack://circuitBreaker/./lib/circuit.js","webpack://circuitBreaker/./lib/semaphore.js","webpack://circuitBreaker/./lib/status.js","webpack://circuitBreaker/./node_modules/events/events.js","webpack://circuitBreaker/webpack/bootstrap","webpack://circuitBreaker/webpack/before-startup","webpack://circuitBreaker/webpack/startup","webpack://circuitBreaker/webpack/after-startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"circuitBreaker\"] = factory();\n\telse\n\t\troot[\"circuitBreaker\"] = factory();\n})(self, () => {\nreturn ","'use strict';\n\nmodule.exports = exports = require('./lib/circuit');\n","'use strict';\n\nconst EventEmitter = require('events');\nconst Status = require('./status');\nconst Semaphore = require('./semaphore');\n\nconst STATE = Symbol('state');\nconst OPEN = Symbol('open');\nconst CLOSED = Symbol('closed');\nconst HALF_OPEN = Symbol('half-open');\nconst PENDING_CLOSE = Symbol('pending-close');\nconst SHUTDOWN = Symbol('shutdown');\nconst FALLBACK_FUNCTION = Symbol('fallback');\nconst STATUS = Symbol('status');\nconst NAME = Symbol('name');\nconst GROUP = Symbol('group');\nconst CACHE = new WeakMap();\nconst ENABLED = Symbol('Enabled');\nconst WARMING_UP = Symbol('warming-up');\nconst VOLUME_THRESHOLD = Symbol('volume-threshold');\nconst OUR_ERROR = Symbol('our-error');\nconst RESET_TIMEOUT = Symbol('reset-timeout');\nconst WARMUP_TIMEOUT = Symbol('warmup-timeout');\nconst LAST_TIMER_AT = Symbol('last-timer-at');\nconst deprecation = `options.maxFailures is deprecated. \\\nPlease use options.errorThresholdPercentage`;\n\n/**\n * Constructs a {@link CircuitBreaker}.\n *\n * @class CircuitBreaker\n * @extends EventEmitter\n * @param {Function} action The action to fire for this {@link CircuitBreaker}\n * @param {Object} options Options for the {@link CircuitBreaker}\n * @param {Status} options.status A {@link Status} object that might\n *   have pre-prime stats\n * @param {Number} options.timeout The time in milliseconds that action should\n * be allowed to execute before timing out. Timeout can be disabled by setting\n * this to `false`. Default 10000 (10 seconds)\n * @param {Number} options.maxFailures (Deprecated) The number of times the\n * circuit can fail before opening. Default 10.\n * @param {Number} options.resetTimeout The time in milliseconds to wait before\n * setting the breaker to `halfOpen` state, and trying the action again.\n * Default: 30000 (30 seconds)\n * @param {Number} options.rollingCountTimeout Sets the duration of the\n * statistical rolling window, in milliseconds. This is how long Opossum keeps\n * metrics for the circuit breaker to use and for publishing. Default: 10000\n * @param {Number} options.rollingCountBuckets Sets the number of buckets the\n * rolling statistical window is divided into. So, if\n * options.rollingCountTimeout is 10000, and options.rollingCountBuckets is 10,\n * then the statistical window will be 1000/1 second snapshots in the\n * statistical window. Default: 10\n * @param {String} options.name the circuit name to use when reporting stats.\n * Default: the name of the function this circuit controls.\n * @param {boolean} options.rollingPercentilesEnabled This property indicates\n * whether execution latencies should be tracked and calculated as percentiles.\n * If they are disabled, all summary statistics (mean, percentiles) are\n * returned as -1. Default: true\n * @param {Number} options.capacity the number of concurrent requests allowed.\n * If the number currently executing function calls is equal to\n * options.capacity, further calls to `fire()` are rejected until at least one\n * of the current requests completes. Default: `Number.MAX_SAFE_INTEGER`.\n * @param {Number} options.errorThresholdPercentage the error percentage at\n * which to open the circuit and start short-circuiting requests to fallback.\n * Default: 50\n * @param {boolean} options.enabled whether this circuit is enabled upon\n * construction. Default: true\n * @param {boolean} options.allowWarmUp determines whether to allow failures\n * without opening the circuit during a brief warmup period (this is the\n * `rollingCountTimeout` property). Default: false\n * This can help in situations where no matter what your\n * `errorThresholdPercentage` is, if the first execution times out or fails,\n * the circuit immediately opens.\n * @param {Number} options.volumeThreshold the minimum number of requests within\n * the rolling statistical window that must exist before the circuit breaker\n * can open. This is similar to `options.allowWarmUp` in that no matter how many\n * failures there are, if the number of requests within the statistical window\n * does not exceed this threshold, the circuit will remain closed. Default: 0\n * @param {Function} options.errorFilter an optional function that will be\n * called when the circuit's function fails (returns a rejected Promise). If\n * this function returns truthy, the circuit's failPure statistics will not be\n * incremented. This is useful, for example, when you don't want HTTP 404 to\n * trip the circuit, but still want to handle it as a failure case.\n * @param {boolean} options.cache whether the return value of the first\n * successful execution of the circuit's function will be cached. Once a value\n * has been cached that value will be returned for every subsequent execution:\n * the cache can be cleared using `clearCache`. (The metrics `cacheHit` and\n * `cacheMiss` reflect cache activity.) Default: false\n * @param {AbortController} options.abortController this allows Opossum to\n * signal upon timeout and properly abort your on going requests instead of\n * leaving it in the background\n *\n *\n * @fires CircuitBreaker#halfOpen\n * @fires CircuitBreaker#close\n * @fires CircuitBreaker#open\n * @fires CircuitBreaker#fire\n * @fires CircuitBreaker#cacheHit\n * @fires CircuitBreaker#cacheMiss\n * @fires CircuitBreaker#reject\n * @fires CircuitBreaker#timeout\n * @fires CircuitBreaker#success\n * @fires CircuitBreaker#semaphoreLocked\n * @fires CircuitBreaker#healthCheckFailed\n * @fires CircuitBreaker#fallback\n * @fires CircuitBreaker#failure\n */\nclass CircuitBreaker extends EventEmitter {\n  /**\n   * Returns true if the provided error was generated here. It will be false\n   * if the error came from the action itself.\n   * @param {Error} error The Error to check.\n   * @returns {Boolean} true if the error was generated here\n   */\n  static isOurError (error) {\n    return !!error[OUR_ERROR];\n  }\n\n  /**\n  * Create a new Status object,\n  * helpful when you need to prime a breaker with stats\n  * @param {Object} options -\n  * @param {Number} options.rollingCountBuckets number of buckets in the window\n  * @param {Number} options.rollingCountTimeout the duration of the window\n  * @param {Boolean} options.rollingPercentilesEnabled whether to calculate\n  * @param {Object} options.stats user supplied stats\n  * @returns {Status} a new {@link Status} object\n  */\n  static newStatus (options) {\n    return new Status(options);\n  }\n\n  constructor (action, options = {}) {\n    super();\n    this.options = options;\n    this.options.timeout =\n      options.timeout === false ? false : options.timeout || 10000;\n    this.options.resetTimeout = options.resetTimeout || 30000;\n    this.options.errorThresholdPercentage =\n      options.errorThresholdPercentage || 50;\n    this.options.rollingCountTimeout = options.rollingCountTimeout || 10000;\n    this.options.rollingCountBuckets = options.rollingCountBuckets || 10;\n    this.options.rollingPercentilesEnabled =\n      options.rollingPercentilesEnabled !== false;\n    this.options.capacity = Number.isInteger(options.capacity)\n      ? options.capacity\n      : Number.MAX_SAFE_INTEGER;\n    this.options.errorFilter = options.errorFilter || (_ => false);\n\n    this.semaphore = new Semaphore(this.options.capacity);\n\n    // check if action is defined\n    if (!action) {\n      throw new TypeError(\n        'No action provided. Cannot construct a CircuitBreaker without an invocable action.'\n      );\n    }\n\n    if (options.abortController && typeof options.abortController.abort !== 'function') {\n      throw new TypeError(\n        'AbortController does not contain `abort()` method'\n      );\n    }\n\n    this[VOLUME_THRESHOLD] = Number.isInteger(options.volumeThreshold)\n      ? options.volumeThreshold\n      : 0;\n    this[WARMING_UP] = options.allowWarmUp === true;\n\n    // The user can pass in a Status object to initialize the Status/stats\n    if (this.options.status) {\n      // Do a check that this is a Status Object,\n      if (this.options.status instanceof Status) {\n        this[STATUS] = this.options.status;\n      } else {\n        this[STATUS] = new Status({ stats: this.options.status });\n      }\n    } else {\n      this[STATUS] = new Status(this.options);\n    }\n\n    this[STATE] = CLOSED;\n\n    if (options.state) {\n      this[ENABLED] = options.state.enabled !== false;\n      this[WARMING_UP] = options.state.warmUp || this[WARMING_UP];\n      // Closed if nothing is passed in\n      this[CLOSED] = options.state.closed !== false;\n      // These should be in sync\n      this[HALF_OPEN] = this[PENDING_CLOSE] = options.state.halfOpen || false;\n      // Open should be the opposite of closed,\n      // but also the opposite of half_open\n      this[OPEN] = !this[CLOSED] && !this[HALF_OPEN];\n      this[SHUTDOWN] = options.state.shutdown || false;\n    } else {\n      this[PENDING_CLOSE] = false;\n      this[ENABLED] = options.enabled !== false;\n    }\n\n    this[FALLBACK_FUNCTION] = null;\n    this[NAME] = options.name || action.name || nextName();\n    this[GROUP] = options.group || this[NAME];\n\n    if (this[WARMING_UP]) {\n      const timer = this[WARMUP_TIMEOUT] = setTimeout(\n        _ => (this[WARMING_UP] = false),\n        this.options.rollingCountTimeout\n      );\n      if (typeof timer.unref === 'function') {\n        timer.unref();\n      }\n    }\n\n    if (typeof action !== 'function') {\n      this.action = _ => Promise.resolve(action);\n    } else this.action = action;\n\n    if (options.maxFailures) console.error(deprecation);\n\n    const increment = property =>\n      (result, runTime) => this[STATUS].increment(property, runTime);\n\n    this.on('success', increment('successes'));\n    this.on('failure', increment('failures'));\n    this.on('fallback', increment('fallbacks'));\n    this.on('timeout', increment('timeouts'));\n    this.on('fire', increment('fires'));\n    this.on('reject', increment('rejects'));\n    this.on('cacheHit', increment('cacheHits'));\n    this.on('cacheMiss', increment('cacheMisses'));\n    this.on('open', _ => this[STATUS].open());\n    this.on('close', _ => this[STATUS].close());\n    this.on('semaphoreLocked', increment('semaphoreRejections'));\n\n    /**\n     * @param {CircuitBreaker} circuit This current circuit\n     * @returns {function(): void} A bound reset callback\n     * @private\n     */\n    function _startTimer (circuit) {\n      circuit[LAST_TIMER_AT] = Date.now();\n      return _ => {\n        const timer = circuit[RESET_TIMEOUT] = setTimeout(() => {\n          _halfOpen(circuit);\n        }, circuit.options.resetTimeout);\n        if (typeof timer.unref === 'function') {\n          timer.unref();\n        }\n      };\n    }\n\n    /**\n     * Sets the circuit breaker to half open\n     * @private\n     * @param {CircuitBreaker} circuit The current circuit breaker\n     * @returns {void}\n     */\n    function _halfOpen (circuit) {\n      circuit[STATE] = HALF_OPEN;\n      circuit[PENDING_CLOSE] = true;\n      /**\n       * Emitted after `options.resetTimeout` has elapsed, allowing for\n       * a single attempt to call the service again. If that attempt is\n       * successful, the circuit will be closed. Otherwise it remains open.\n       *\n       * @event CircuitBreaker#halfOpen\n       * @type {Number} how long the circuit remained open\n       */\n      circuit.emit('halfOpen', circuit.options.resetTimeout);\n    }\n\n    this.on('open', _startTimer(this));\n    this.on('success', _ => {\n      if (this.halfOpen) {\n        this.close();\n      }\n    });\n    if (this.options.cache) {\n      CACHE.set(this, undefined);\n    }\n\n    // Prepopulate the State of the Breaker\n    if (this[SHUTDOWN]) {\n      this[STATE] = SHUTDOWN;\n      this.shutdown();\n    } else if (this[CLOSED]) {\n      this.close();\n    } else if (this[OPEN]) {\n      // If the state being passed in is OPEN but more time has elapsed\n      // than the resetTimeout, then we should be in halfOpen state\n      if (this.options.state.lastTimerAt !== undefined &&\n        (Date.now() - this.options.state.lastTimerAt) >\n        this.options.resetTimeout) {\n        _halfOpen(this);\n      } else {\n        this.open();\n      }\n    } else if (this[HALF_OPEN]) {\n      // Not sure if anything needs to be done here\n      this[STATE] = HALF_OPEN;\n    }\n  }\n\n  /**\n   * Closes the breaker, allowing the action to execute again\n   * @fires CircuitBreaker#close\n   * @returns {void}\n   */\n  close () {\n    if (this[STATE] !== CLOSED) {\n      if (this[RESET_TIMEOUT]) {\n        clearTimeout(this[RESET_TIMEOUT]);\n      }\n      this[STATE] = CLOSED;\n      this[PENDING_CLOSE] = false;\n      /**\n       * Emitted when the breaker is reset allowing the action to execute again\n       * @event CircuitBreaker#close\n       */\n      this.emit('close');\n    }\n  }\n\n  /**\n   * Opens the breaker. Each time the breaker is fired while the circuit is\n   * opened, a failed Promise is returned, or if any fallback function\n   * has been provided, it is invoked.\n   *\n   * If the breaker is already open this call does nothing.\n   * @fires CircuitBreaker#open\n   * @returns {void}\n   */\n  open () {\n    if (this[STATE] !== OPEN) {\n      this[STATE] = OPEN;\n      this[PENDING_CLOSE] = false;\n      /**\n       * Emitted when the breaker opens because the action has\n       * failure percentage greater than `options.errorThresholdPercentage`.\n       * @event CircuitBreaker#open\n       */\n      this.emit('open');\n    }\n  }\n\n  /**\n   * Shuts down this circuit breaker. All subsequent calls to the\n   * circuit will fail, returning a rejected promise.\n   * @returns {void}\n   */\n  shutdown () {\n    /**\n     * Emitted when the circuit breaker has been shut down.\n     * @event CircuitBreaker#shutdown\n     */\n    this.emit('shutdown');\n\n    this.disable();\n    this.removeAllListeners();\n    if (this[RESET_TIMEOUT]) {\n      clearTimeout(this[RESET_TIMEOUT]);\n    }\n    if (this[WARMUP_TIMEOUT]) {\n      clearTimeout(this[WARMUP_TIMEOUT]);\n    }\n    this.status.shutdown();\n    this[STATE] = SHUTDOWN;\n  }\n\n  /**\n   * Determines if the circuit has been shutdown.\n   * @type {Boolean}\n   */\n  get isShutdown () {\n    return this[STATE] === SHUTDOWN;\n  }\n\n  /**\n   * Gets the name of this circuit\n   * @type {String}\n   */\n  get name () {\n    return this[NAME];\n  }\n\n  /**\n   * Gets the name of this circuit group\n   * @type {String}\n   */\n  get group () {\n    return this[GROUP];\n  }\n\n  /**\n   * Gets whether this circuit is in the `pendingClosed` state\n   * @type {Boolean}\n   */\n  get pendingClose () {\n    return this[PENDING_CLOSE];\n  }\n\n  /**\n   * True if the circuit is currently closed. False otherwise.\n   * @type {Boolean}\n   */\n  get closed () {\n    return this[STATE] === CLOSED;\n  }\n\n  /**\n   * True if the circuit is currently opened. False otherwise.\n   * @type {Boolean}\n   */\n  get opened () {\n    return this[STATE] === OPEN;\n  }\n\n  /**\n   * True if the circuit is currently half opened. False otherwise.\n   * @type {Boolean}\n   */\n  get halfOpen () {\n    return this[STATE] === HALF_OPEN;\n  }\n\n  /**\n   * The current {@link Status} of this {@link CircuitBreaker}\n   * @type {Status}\n   */\n  get status () {\n    return this[STATUS];\n  }\n\n  /**\n   * Get the current stats for the circuit.\n   * @see Status#stats\n   * @type {Object}\n   */\n  get stats () {\n    return this[STATUS].stats;\n  }\n\n  toJSON () {\n    return {\n      state: {\n        name: this.name,\n        enabled: this.enabled,\n        closed: this.closed,\n        open: this.opened,\n        halfOpen: this.halfOpen,\n        warmUp: this.warmUp,\n        shutdown: this.isShutdown,\n        lastTimerAt: this[LAST_TIMER_AT]\n      },\n      status: this.status.stats\n    };\n  }\n\n  /**\n   * Gets whether the circuit is enabled or not\n   * @type {Boolean}\n   */\n  get enabled () {\n    return this[ENABLED];\n  }\n\n  /**\n   * Gets whether the circuit is currently in warm up phase\n   * @type {Boolean}\n   */\n  get warmUp () {\n    return this[WARMING_UP];\n  }\n\n  /**\n   * Gets the volume threshold for this circuit\n   * @type {Boolean}\n   */\n  get volumeThreshold () {\n    return this[VOLUME_THRESHOLD];\n  }\n\n  /**\n   * Provide a fallback function for this {@link CircuitBreaker}. This\n   * function will be executed when the circuit is `fire`d and fails.\n   * It will always be preceded by a `failure` event, and `breaker.fire` returns\n   * a rejected Promise.\n   * @param {Function | CircuitBreaker} func the fallback function to execute\n   * when the breaker has opened or when a timeout or error occurs.\n   * @return {CircuitBreaker} this\n   */\n  fallback (func) {\n    let fb = func;\n    if (func instanceof CircuitBreaker) {\n      fb = function () {\n        return func.fire.apply(func, arguments);\n      };\n    }\n    this[FALLBACK_FUNCTION] = fb;\n    return this;\n  }\n\n  /**\n   * Execute the action for this circuit. If the action fails or times out, the\n   * returned promise will be rejected. If the action succeeds, the promise will\n   * resolve with the resolved value from action. If a fallback function was\n   * provided, it will be invoked in the event of any failure or timeout.\n   *\n   * Any parameters passed to this function will be proxied to the circuit\n   * function.\n   *\n   * @return {Promise<any>} promise resolves with the circuit function's return\n   * value on success or is rejected on failure of the action. Use isOurError()\n   * to determine if a rejection was a result of the circuit breaker or the\n   * action.\n   *\n   * @fires CircuitBreaker#failure\n   * @fires CircuitBreaker#fallback\n   * @fires CircuitBreaker#fire\n   * @fires CircuitBreaker#reject\n   * @fires CircuitBreaker#success\n   * @fires CircuitBreaker#timeout\n   * @fires CircuitBreaker#semaphoreLocked\n   */\n  fire (...args) {\n    return this.call.apply(this, [this.action].concat(args));\n  }\n\n  /**\n   * Execute the action for this circuit using `context` as `this`.\n   * If the action fails or times out, the\n   * returned promise will be rejected. If the action succeeds, the promise will\n   * resolve with the resolved value from action. If a fallback function was\n   * provided, it will be invoked in the event of any failure or timeout.\n   *\n   * Any parameters in addition to `context will be passed to the\n   * circuit function.\n   *\n   * @param {any} context the `this` context used for function execution\n   * @param {any} rest the arguments passed to the action\n   *\n   * @return {Promise<any>} promise resolves with the circuit function's return\n   * value on success or is rejected on failure of the action.\n   *\n   * @fires CircuitBreaker#failure\n   * @fires CircuitBreaker#fallback\n   * @fires CircuitBreaker#fire\n   * @fires CircuitBreaker#reject\n   * @fires CircuitBreaker#success\n   * @fires CircuitBreaker#timeout\n   * @fires CircuitBreaker#semaphoreLocked\n   */\n  call (context, ...rest) {\n    if (this.isShutdown) {\n      const err = buildError('The circuit has been shutdown.', 'ESHUTDOWN');\n      return Promise.reject(err);\n    }\n    const args = Array.prototype.slice.call(rest);\n\n    /**\n     * Emitted when the circuit breaker action is executed\n     * @event CircuitBreaker#fire\n     * @type {any} the arguments passed to the fired function\n     */\n    this.emit('fire', args);\n\n    if (CACHE.get(this) !== undefined) {\n      /**\n       * Emitted when the circuit breaker is using the cache\n       * and finds a value.\n       * @event CircuitBreaker#cacheHit\n       */\n      this.emit('cacheHit');\n      return CACHE.get(this);\n    } else if (this.options.cache) {\n      /**\n       * Emitted when the circuit breaker does not find a value in\n       * the cache, but the cache option is enabled.\n       * @event CircuitBreaker#cacheMiss\n       */\n      this.emit('cacheMiss');\n    }\n\n    if (!this[ENABLED]) {\n      const result = this.action.apply(context, args);\n      return (typeof result.then === 'function')\n        ? result\n        : Promise.resolve(result);\n    }\n\n    if (!this.closed && !this.pendingClose) {\n      /**\n       * Emitted when the circuit breaker is open and failing fast\n       * @event CircuitBreaker#reject\n       * @type {Error}\n       */\n      const error = buildError('Breaker is open', 'EOPENBREAKER');\n\n      this.emit('reject', error);\n\n      return fallback(this, error, args) ||\n        Promise.reject(error);\n    }\n    this[PENDING_CLOSE] = false;\n\n    let timeout;\n    let timeoutError = false;\n    return new Promise((resolve, reject) => {\n      const latencyStartTime = Date.now();\n      if (this.semaphore.test()) {\n        if (this.options.timeout) {\n          timeout = setTimeout(\n            () => {\n              timeoutError = true;\n              const error = buildError(\n                `Timed out after ${this.options.timeout}ms`, 'ETIMEDOUT'\n              );\n              const latency = Date.now() - latencyStartTime;\n              this.semaphore.release();\n              /**\n               * Emitted when the circuit breaker action takes longer than\n               * `options.timeout`\n               * @event CircuitBreaker#timeout\n               * @type {Error}\n               */\n              this.emit('timeout', error, latency, args);\n              handleError(error, this, timeout, args, latency, resolve, reject);\n              if (this.options.abortController) {\n                this.options.abortController.abort();\n              }\n            }, this.options.timeout);\n        }\n\n        try {\n          const result = this.action.apply(context, args);\n          const promise = (typeof result.then === 'function')\n            ? result\n            : Promise.resolve(result);\n\n          promise.then(result => {\n            if (!timeoutError) {\n              clearTimeout(timeout);\n              /**\n               * Emitted when the circuit breaker action succeeds\n               * @event CircuitBreaker#success\n               * @type {any} the return value from the circuit\n               */\n              this.emit('success', result, (Date.now() - latencyStartTime));\n              this.semaphore.release();\n              resolve(result);\n              if (this.options.cache) {\n                CACHE.set(this, promise);\n              }\n            }\n          })\n            .catch(error => {\n              if (!timeoutError) {\n                this.semaphore.release();\n                const latencyEndTime = Date.now() - latencyStartTime;\n                handleError(\n                  error, this, timeout, args, latencyEndTime, resolve, reject);\n              }\n            });\n        } catch (error) {\n          this.semaphore.release();\n          const latency = Date.now() - latencyStartTime;\n          handleError(error, this, timeout, args, latency, resolve, reject);\n        }\n      } else {\n        const latency = Date.now() - latencyStartTime;\n        const err = buildError('Semaphore locked', 'ESEMLOCKED');\n        /**\n         * Emitted when the rate limit has been reached and there\n         * are no more locks to be obtained.\n         * @event CircuitBreaker#semaphoreLocked\n         * @type {Error}\n         */\n        this.emit('semaphoreLocked', err, latency);\n        handleError(err, this, timeout, args, latency, resolve, reject);\n      }\n    });\n  }\n\n  /**\n   * Clears the cache of this {@link CircuitBreaker}\n   * @returns {void}\n   */\n  clearCache () {\n    CACHE.set(this, undefined);\n  }\n\n  /**\n   * Provide a health check function to be called periodically. The function\n   * should return a Promise. If the promise is rejected the circuit will open.\n   * This is in addition to the existing circuit behavior as defined by\n   * `options.errorThresholdPercentage` in the constructor. For example, if the\n   * health check function provided here always returns a resolved promise, the\n   * circuit can still trip and open if there are failures exceeding the\n   * configured threshold. The health check function is executed within the\n   * circuit breaker's execution context, so `this` within the function is the\n   * circuit breaker itself.\n   *\n   * @param {Function} func a health check function which returns a promise.\n   * @param {Number} [interval] the amount of time between calls to the health\n   * check function. Default: 5000 (5 seconds)\n   *\n   * @returns {void}\n   *\n   * @fires CircuitBreaker#healthCheckFailed\n   * @throws {TypeError} if `interval` is supplied but not a number\n   */\n  healthCheck (func, interval) {\n    interval = interval || 5000;\n    if (typeof func !== 'function') {\n      throw new TypeError('Health check function must be a function');\n    }\n    if (isNaN(interval)) {\n      throw new TypeError('Health check interval must be a number');\n    }\n\n    const check = _ => {\n      func.apply(this).catch(e => {\n        /**\n         * Emitted with the user-supplied health check function\n         * returns a rejected promise.\n         * @event CircuitBreaker#healthCheckFailed\n         * @type {Error}\n         */\n        this.emit('healthCheckFailed', e);\n        this.open();\n      });\n    };\n\n    const timer = setInterval(check, interval);\n    if (typeof timer.unref === 'function') {\n      timer.unref();\n    }\n\n    check();\n  }\n\n  /**\n   * Enables this circuit. If the circuit is the  disabled\n   * state, it will be re-enabled. If not, this is essentially\n   * a noop.\n   * @returns {void}\n   */\n  enable () {\n    this[ENABLED] = true;\n  }\n\n  /**\n   * Disables this circuit, causing all calls to the circuit's function\n   * to be executed without circuit or fallback protection.\n   * @returns {void}\n   */\n  disable () {\n    this[ENABLED] = false;\n  }\n}\n\nfunction handleError (error, circuit, timeout, args, latency, resolve, reject) {\n  clearTimeout(timeout);\n\n  if (circuit.options.errorFilter(error, ...args)) {\n    // The error was filtered, so emit 'success'\n    circuit.emit('success', error, latency);\n  } else {\n    // Error was not filtered, so emit 'failure'\n    fail(circuit, error, args, latency);\n\n    // Only call the fallback function if errorFilter doesn't succeed\n    // If the fallback function succeeds, resolve\n    const fb = fallback(circuit, error, args);\n    if (fb) return resolve(fb);\n  }\n  // In all other cases, reject\n  reject(error);\n}\n\nfunction fallback (circuit, err, args) {\n  if (circuit[FALLBACK_FUNCTION]) {\n    try {\n      const result =\n      circuit[FALLBACK_FUNCTION]\n        .apply(circuit[FALLBACK_FUNCTION], [...args, err]);\n      /**\n       * Emitted when the circuit breaker executes a fallback function\n       * @event CircuitBreaker#fallback\n       * @type {any} the return value of the fallback function\n       */\n      circuit.emit('fallback', result, err);\n      if (result instanceof Promise) return result;\n      return Promise.resolve(result);\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  }\n}\n\nfunction fail (circuit, err, args, latency) {\n  /**\n   * Emitted when the circuit breaker action fails\n   * @event CircuitBreaker#failure\n   * @type {Error}\n   */\n  circuit.emit('failure', err, latency, args);\n  if (circuit.warmUp) return;\n\n  // check stats to see if the circuit should be opened\n  const stats = circuit.stats;\n  if ((stats.fires < circuit.volumeThreshold) && !circuit.halfOpen) return;\n  const errorRate = stats.failures / stats.fires * 100;\n  if (errorRate > circuit.options.errorThresholdPercentage ||\n    circuit.halfOpen) {\n    circuit.open();\n  }\n}\n\nfunction buildError (msg, code) {\n  const error = new Error(msg);\n  error.code = code;\n  error[OUR_ERROR] = true;\n  return error;\n}\n\n// http://stackoverflow.com/a/2117523\nconst nextName = () =>\n  'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\n    const r = Math.random() * 16 | 0;\n    const v = c === 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\n\nmodule.exports = exports = CircuitBreaker;\n","'use strict';\n\nmodule.exports = exports = semaphore;\n\nfunction semaphore (count) {\n  const resolvers = [];\n  let counter = count;\n\n  const sem = {\n    take,\n    release,\n    test\n  };\n\n  Object.defineProperty(sem, 'count', {\n    get: _ => counter,\n    enumerable: true\n  });\n\n  return sem;\n\n  function take (timeout) {\n    if (counter > 0) {\n      --counter;\n      return Promise.resolve(release);\n    }\n    return new Promise((resolve, reject) => {\n      resolvers.push(_ => {\n        --counter;\n        resolve(release);\n      });\n      if (timeout) {\n        setTimeout(_ => {\n          resolvers.shift();\n          const err = new Error(`Timed out after ${timeout}ms`);\n          err.code = 'ETIMEDOUT';\n          reject(err);\n        }, timeout);\n      }\n    });\n  }\n\n  function release () {\n    counter++;\n    if (resolvers.length > 0) {\n      resolvers.shift()();\n    }\n  }\n\n  function test () {\n    if (counter < 1) return false;\n    return take() && true;\n  }\n}\n","'use strict';\n\nconst WINDOW = Symbol('window');\nconst BUCKETS = Symbol('buckets');\nconst TIMEOUT = Symbol('timeout');\nconst PERCENTILES = Symbol('percentiles');\nconst BUCKET_INTERVAL = Symbol('bucket-interval');\nconst SNAPSHOT_INTERVAL = Symbol('snapshot-interval');\n\nconst EventEmitter = require('events').EventEmitter;\n\n/**\n * Tracks execution status for a given {@link CircuitBreaker}.\n * A Status instance is created for every {@link CircuitBreaker}\n * and does not typically need to be created by a user.\n *\n * A Status instance will listen for all events on the {@link CircuitBreaker}\n * and track them in a rolling statistical window. The window duration is\n * determined by the `rollingCountTimeout` option provided to the\n * {@link CircuitBreaker}. The window consists of an array of Objects,\n * each representing the counts for a {@link CircuitBreaker}'s events.\n *\n * The array's length is determined by the {@link CircuitBreaker}'s\n * `rollingCountBuckets` option. The duration of each slice of the window\n * is determined by dividing the `rollingCountTimeout` by\n * `rollingCountBuckets`.\n *\n * @class Status\n * @extends EventEmitter\n * @param {Object} options for the status window\n * @param {Number} options.rollingCountBuckets number of buckets in the window\n * @param {Number} options.rollingCountTimeout the duration of the window\n * @param {Boolean} options.rollingPercentilesEnabled whether to calculate\n * percentiles\n * @param {Object} options.stats object of previous stats\n * @example\n * // Creates a 1 second window consisting of ten time slices,\n * // each 100ms long.\n * const circuit = circuitBreaker(fs.readFile,\n *  { rollingCountBuckets: 10, rollingCountTimeout: 1000});\n *\n * // get the cumulative statistics for the last second\n * circuit.status.stats;\n *\n * // get the array of 10, 1 second time slices for the last second\n * circuit.status.window;\n * @fires Status#snapshot\n * @see CircuitBreaker#status\n */\nclass Status extends EventEmitter {\n  constructor (options) {\n    super();\n\n    // Set up our statistical rolling window\n    this[BUCKETS] = options.rollingCountBuckets || 10;\n    this[TIMEOUT] = options.rollingCountTimeout || 10000;\n    this[WINDOW] = new Array(this[BUCKETS]);\n    this[PERCENTILES] = [0.0, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99, 0.995, 1];\n\n    // Default this value to true\n    this.rollingPercentilesEnabled =\n    options.rollingPercentilesEnabled !== false;\n\n    // prime the window with buckets\n    for (let i = 0; i < this[BUCKETS]; i++) this[WINDOW][i] = bucket();\n\n    // rotate the buckets periodically\n    const bucketInterval = Math.floor(this[TIMEOUT] / this[BUCKETS]);\n    this[BUCKET_INTERVAL] = setInterval(nextBucket(this[WINDOW]),\n      bucketInterval);\n\n    // No unref() in the browser\n    if (typeof this[BUCKET_INTERVAL].unref === 'function') {\n      this[BUCKET_INTERVAL].unref();\n    }\n\n    /**\n     * Emitted at each time-slice. Listeners for this\n     * event will receive a cumulative snapshot of the current status window.\n     * @event Status#snapshot\n     * @type {Object}\n     */\n    this[SNAPSHOT_INTERVAL] = setInterval(\n      _ => this.emit('snapshot', this.stats),\n      bucketInterval);\n    if (typeof this[SNAPSHOT_INTERVAL].unref === 'function') {\n      this[SNAPSHOT_INTERVAL].unref();\n    }\n\n    if (options.stats) {\n      this[WINDOW][0] = { ...bucket(), ...options.stats };\n    }\n  }\n\n  /**\n   * Get the cumulative stats for the current window\n   * @type {Object}\n   */\n  get stats () {\n    const totals = this[WINDOW].reduce((acc, val) => {\n      if (!val) { return acc; }\n      Object.keys(acc).forEach(key => {\n        if (key !== 'latencyTimes' && key !== 'percentiles') {\n          (acc[key] += val[key] || 0);\n        }\n      });\n\n      if (this.rollingPercentilesEnabled) {\n        acc.latencyTimes.push.apply(acc.latencyTimes, val.latencyTimes || []);\n      }\n      return acc;\n    }, bucket());\n\n    if (this.rollingPercentilesEnabled) {\n      // Sort the latencyTimes\n      totals.latencyTimes.sort((a, b) => a - b);\n\n      // Get the mean latency\n      // Mean = sum of all values in the array/length of array\n      if (totals.latencyTimes.length) {\n        totals.latencyMean =\n          (totals\n            .latencyTimes\n            .reduce((a, b) => a + b, 0)) / totals.latencyTimes.length;\n      } else {\n        totals.latencyMean = 0;\n      }\n\n      // Calculate Percentiles\n      this[PERCENTILES].forEach(percentile => {\n        totals.percentiles[percentile] =\n          calculatePercentile(percentile, totals.latencyTimes);\n      });\n    } else {\n      totals.latencyMean = -1;\n      this[PERCENTILES].forEach(percentile => {\n        totals.percentiles[percentile] = -1;\n      });\n    }\n\n    return totals;\n  }\n\n  /**\n   * Gets the stats window as an array of time-sliced objects.\n   * @type {Array}\n   */\n  get window () {\n    return this[WINDOW].slice();\n  }\n\n  increment (property, latencyRunTime) {\n    this[WINDOW][0][property]++;\n    if (property === 'successes' ||\n        property === 'failures' ||\n        property === 'timeouts') {\n      this[WINDOW][0].latencyTimes.push(latencyRunTime || 0);\n    }\n  }\n\n  open () {\n    this[WINDOW][0].isCircuitBreakerOpen = true;\n  }\n\n  close () {\n    this[WINDOW][0].isCircuitBreakerOpen = false;\n  }\n\n  shutdown () {\n    this.removeAllListeners();\n    clearInterval(this[BUCKET_INTERVAL]);\n    clearInterval(this[SNAPSHOT_INTERVAL]);\n  }\n}\n\nconst nextBucket = window => _ => {\n  window.pop();\n  window.unshift(bucket());\n};\n\nconst bucket = _ => ({\n  failures: 0,\n  fallbacks: 0,\n  successes: 0,\n  rejects: 0,\n  fires: 0,\n  timeouts: 0,\n  cacheHits: 0,\n  cacheMisses: 0,\n  semaphoreRejections: 0,\n  percentiles: {},\n  latencyTimes: []\n});\n\nfunction calculatePercentile (percentile, arr) {\n  if (percentile === 0) {\n    return arr[0] || 0;\n  }\n  const idx = Math.ceil(percentile * arr.length);\n  return arr[idx - 1] || 0;\n}\n\nmodule.exports = exports = Status;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./index.js\");\n",""],"names":["module","exports","require","EventEmitter","Status","Semaphore","STATE","Symbol","OPEN","CLOSED","HALF_OPEN","PENDING_CLOSE","SHUTDOWN","FALLBACK_FUNCTION","STATUS","NAME","GROUP","CACHE","WeakMap","ENABLED","WARMING_UP","VOLUME_THRESHOLD","OUR_ERROR","RESET_TIMEOUT","WARMUP_TIMEOUT","LAST_TIMER_AT","deprecation","CircuitBreaker","action","options","timeout","resetTimeout","errorThresholdPercentage","rollingCountTimeout","rollingCountBuckets","rollingPercentilesEnabled","capacity","Number","isInteger","MAX_SAFE_INTEGER","errorFilter","_","semaphore","TypeError","abortController","abort","volumeThreshold","allowWarmUp","status","stats","state","enabled","warmUp","closed","halfOpen","shutdown","name","nextName","group","timer","setTimeout","unref","Promise","resolve","maxFailures","console","error","increment","property","result","runTime","on","open","close","_startTimer","circuit","Date","now","_halfOpen","emit","cache","set","undefined","lastTimerAt","clearTimeout","disable","removeAllListeners","opened","isShutdown","func","fb","fire","apply","arguments","args","call","concat","context","err","buildError","reject","rest","Array","prototype","slice","get","then","pendingClose","fallback","timeoutError","latencyStartTime","test","latency","release","handleError","promise","latencyEndTime","interval","isNaN","check","e","setInterval","fail","fires","errorRate","failures","msg","code","Error","replace","c","r","Math","random","v","toString","count","resolvers","counter","sem","take","Object","defineProperty","enumerable","push","shift","length","WINDOW","BUCKETS","TIMEOUT","PERCENTILES","BUCKET_INTERVAL","SNAPSHOT_INTERVAL","i","bucket","bucketInterval","floor","nextBucket","totals","reduce","acc","val","keys","forEach","key","latencyTimes","sort","a","b","latencyMean","percentile","percentiles","calculatePercentile","latencyRunTime","isCircuitBreakerOpen","clearInterval","window","pop","unshift","fallbacks","successes","rejects","timeouts","cacheHits","cacheMisses","semaphoreRejections","arr","idx","ceil"],"sourceRoot":""}